#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace students.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="peregoncevKP")]
	public partial class StatementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertStatements(Statements instance);
    partial void UpdateStatements(Statements instance);
    partial void DeleteStatements(Statements instance);
    #endregion
		
		public StatementDataContext() : 
				base(global::students.Properties.Settings.Default.peregoncevKPConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public StatementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Statements> Statements
		{
			get
			{
				return this.GetTable<Statements>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statements")]
	public partial class Statements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private string _Speciality;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _MinScore;
		
		private System.Nullable<double> _AverageScore;
		
		private System.Nullable<double> _DoubledGrant;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnSpecialityChanging(string value);
    partial void OnSpecialityChanged();
    partial void OnCourseChanging(System.Nullable<int> value);
    partial void OnCourseChanged();
    partial void OnMinScoreChanging(System.Nullable<int> value);
    partial void OnMinScoreChanged();
    partial void OnAverageScoreChanging(System.Nullable<double> value);
    partial void OnAverageScoreChanged();
    partial void OnDoubledGrantChanging(System.Nullable<double> value);
    partial void OnDoubledGrantChanged();
    #endregion
		
		public Statements()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this.OnSpecialityChanging(value);
					this.SendPropertyChanging();
					this._Speciality = value;
					this.SendPropertyChanged("Speciality");
					this.OnSpecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinScore", DbType="Int")]
		public System.Nullable<int> MinScore
		{
			get
			{
				return this._MinScore;
			}
			set
			{
				if ((this._MinScore != value))
				{
					this.OnMinScoreChanging(value);
					this.SendPropertyChanging();
					this._MinScore = value;
					this.SendPropertyChanged("MinScore");
					this.OnMinScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageScore", DbType="Float")]
		public System.Nullable<double> AverageScore
		{
			get
			{
				return this._AverageScore;
			}
			set
			{
				if ((this._AverageScore != value))
				{
					this.OnAverageScoreChanging(value);
					this.SendPropertyChanging();
					this._AverageScore = value;
					this.SendPropertyChanged("AverageScore");
					this.OnAverageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoubledGrant", DbType="Float")]
		public System.Nullable<double> DoubledGrant
		{
			get
			{
				return this._DoubledGrant;
			}
			set
			{
				if ((this._DoubledGrant != value))
				{
					this.OnDoubledGrantChanging(value);
					this.SendPropertyChanging();
					this._DoubledGrant = value;
					this.SendPropertyChanged("DoubledGrant");
					this.OnDoubledGrantChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
